#version 430
layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

// Compute-based mipmapping/pre-integration inspired by http://www.naixela.com/alex/

/*  Workgroup Size Stats

1^3 167.00 ms
2^3  21.23 ms
4^3   3.77 ms
8^3   4.02 ms  */

uniform int srcMipLevel;
uniform int dstMipRes;
layout(binding = 0) uniform sampler3D srcTextures[6];
layout(binding = 0, rgba8) uniform writeonly image3D dstImageMip[6];

vec4[8] fetchTexels(int dir, ivec3 pos) {
  return vec4[8] (texelFetch(srcTextures[dir], pos + ivec3(1, 1, 1), srcMipLevel),  // 0
                  texelFetch(srcTextures[dir], pos + ivec3(1, 1, 0), srcMipLevel),  // 1
                  texelFetch(srcTextures[dir], pos + ivec3(1, 0, 1), srcMipLevel),  // 2
                  texelFetch(srcTextures[dir], pos + ivec3(1, 0, 0), srcMipLevel),  // 3
                  texelFetch(srcTextures[dir], pos + ivec3(0, 1, 1), srcMipLevel),  // 4
                  texelFetch(srcTextures[dir], pos + ivec3(0, 1, 0), srcMipLevel),  // 5
                  texelFetch(srcTextures[dir], pos + ivec3(0, 0, 1), srcMipLevel),  // 6
                  texelFetch(srcTextures[dir], pos + ivec3(0, 0, 0), srcMipLevel)); // 7
}

/*	 5         1
				
				
4    7    0    3
				
				
6         2   */

void main() {
  if (gl_GlobalInvocationID.x < dstMipRes
      && gl_GlobalInvocationID.y < dstMipRes
      && gl_GlobalInvocationID.z < dstMipRes) {

    ivec3 dstPos = ivec3(gl_GlobalInvocationID);
    ivec3 srcPos = dstPos * 2;
  
    vec4 values[8] = fetchTexels(0, srcPos);
    imageStore(dstImageMip[0], dstPos, (values[0] + values[4] * (1 - values[0].a)
                                        + values[1] + values[5] * (1 - values[1].a)
                                        + values[2] + values[6] * (1 - values[2].a)
                                        + values[3] + values[7] * (1 - values[3].a)) / 4);
    values = fetchTexels(1, srcPos);
    imageStore(dstImageMip[1], dstPos, (values[4] + values[0] * (1 - values[4].a)
                                        + values[5] + values[1] * (1 - values[5].a)
                                        + values[6] + values[2] * (1 - values[6].a)
                                        + values[7] + values[3] * (1 - values[7].a)) / 4);
    values = fetchTexels(2, srcPos);
    imageStore(dstImageMip[2], dstPos, (values[0] + values[2] * (1 - values[0].a)
                                        + values[1] + values[3] * (1 - values[1].a)
                                        + values[5] + values[7] * (1 - values[5].a)
                                        + values[4] + values[6] * (1 - values[4].a)) / 4);
    values = fetchTexels(3, srcPos);
    imageStore(dstImageMip[3], dstPos, (values[2] + values[0] * (1 - values[2].a)
                                        + values[3] + values[1] * (1 - values[3].a)
                                        + values[7] + values[5] * (1 - values[7].a)
                                        + values[6] + values[4] * (1 - values[6].a)) / 4);
    values = fetchTexels(4, srcPos);
    imageStore(dstImageMip[4], dstPos, (values[0] + values[1] * (1 - values[0].a)
                                        + values[2] + values[3] * (1 - values[2].a)
                                        + values[4] + values[5] * (1 - values[4].a)
                                        + values[6] + values[7] * (1 - values[6].a)) / 4);
    values = fetchTexels(5, srcPos);
    imageStore(dstImageMip[5], dstPos, (values[1] + values[0] * (1 - values[1].a)
                                        + values[3] + values[2] * (1 - values[3].a)
                                        + values[5] + values[4] * (1 - values[5].a)
                                        + values[7] + values[6] * (1 - values[7].a)) / 4);
  }
}
